/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
//import java.util.*;
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
     List<List<Integer>> list=new ArrayList();
        if(root==null)return list;
        Queue<TreeNode> qq=new LinkedList();
        qq.add(root);
        int count=0;
        while(!qq.isEmpty()){
            int size=qq.size();
            List<Integer> lt=new ArrayList();
            for(int i=0;i<size;i++){
                TreeNode curr=qq.poll();
                lt.add(curr.val);
                if(curr.left!=null)
                    qq.add(curr.left);
                if(curr.right!=null)
                    qq.add(curr.right);
            }
            if(count%2==0){
                list.add(new ArrayList(lt));
            }
            else{
                Collections.reverse(lt);
                list.add(new ArrayList(lt));
            }
            count++;
        }
        return list;
}
}
